<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Spring Security -->
    <http>
        <csrf disabled="true"/>
        <intercept-url pattern="/register*" access="isAnonymous()" />
        <intercept-url pattern="/example**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/offers**" access="isAuthenticated()" />
        <intercept-url pattern="/apply**" access="hasRole('ROLE_STUDENT')" />
        <intercept-url pattern="/insa**" access="hasRole('ROLE_INSA')" />
        <form-login login-page="/sign-in"
                    username-parameter="j_username"
                    password-parameter="j_password"
                    login-processing-url="/j_spring_security_check"
                    default-target-url="/welcomePage"
                    authentication-failure-url="/loginError"/>
        <logout logout-url="/logout"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <!-- <password-encoder hash="bcrypt" /> -->
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select email,password,verified from user where email=?"
                               authorities-by-username-query="select user.email, role.name from user
											   join user_role on user.id = user_role.users_id
											   join role on user_role.roles_id = role.id
											   where user.email = ?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>